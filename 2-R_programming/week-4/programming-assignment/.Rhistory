head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
num = ifelse(num == "best", 1, ifelse(num == "worst", nrow(df), num))
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n <- ifelse(num > nrow(x), nrow(x), num)
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num = ifelse(num == "best", 1, ifelse(num == "worst", nrow(df), num))
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
rankall("pneumonia", "worst")
a = rankall("pneumonia", "worst")
names(a)
"MAYO CLINIC HEALTH SYSTEM - NORTHLAND, INC" %in% a$hospital
"PLATEAU MEDICAL CENTER" %in% a$hospital
"NORTH BIG HORN HOSPITAL DISTRICT" %in% a$hospital
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(vvar_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
# data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
# data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
any(grep(outcome, vars_names))
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
any(grep(outcome, vars_names))
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
View(ans)
apply(ans, length)
apply(ans, FUN =  length)
apply(ans, FUN =  function(x){length(x)})
apply(ans, FUN =  function(x){dim(x)})
lapply(ans, FUN =  function(x){dim(x)})
lapply(ans, FUN =  function(x){nrow(x)})
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
n
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
# data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
tail(rankall("pneumonia", "worst"), 3)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, c(UQ(sym(var_name)),
UQ(sym("hospital.name")))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, c(UQ(sym(var_name)),
UQ(sym("hospital.name")))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)),
UQ(sym("hospital.name"))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
print(n)
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", "worst"), 10)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)))
)
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
print(n)
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)))
})
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
print(n)
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
num <- "worst
adf[n,"hospital.name"]a
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)))
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
print(n)
adf[n,"hospital.name"]a
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
if (any(grep(outcome, vars_names))){
var_name <- grep(outcome, vars_names, value = T)
print(var_name)
# output <- aggregate(arrange(df, UQ(sym(var_name)),
#                             UQ(sym("hospital.name"))),
#                     list(df$state),
#                     FUN=head, num)
#
# top_n(output[,c("hospital.name", "state")], 5)
splited = split(df, df$state)
ans = lapply(splited, function(x){
adf <- arrange(x, UQ(sym(var_name)))
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
print(n)
adf[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
q()
