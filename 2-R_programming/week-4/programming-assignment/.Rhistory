df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(state, get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
# outcome <- "pneumonia"
# num <- "worst"
rm(list = ls())
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
any(grep(outcome, vars_names))
<- "pneumonia"
num <- "
outcome <- "pneumonia"
num <- "worst"
any(grep(outcome, vars_names))
outcome <- "pneumonia"
num <- "worst"
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(state, get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(state, get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
outcome <- "pneumonia"
num <- "worst"
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(desc(state), get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
rm (list = ls())
tail(rankall("pneumonia", "worst"), 3)
# outcome <- "pneumonia"
# num <- "worst"
rm (list = ls())a
rm (list = ls())
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(desc(state), get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
# outcome <- "pneumonia"
# num <- "worst"
outcome <- "pneumonia"
num <- "worst"
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(desc(state), get(var_name), desc(hospital.name)))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(desc(state), get(var_name), desc(hospital.name)))
View(df)
View(df)
df <- arrange(df, c(state, get(var_name), desc(hospital.name)))
View(df)
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
View(df)
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, c(state, get(var_name), desc(hospital.name)))
arrange(df, c(state, get(var_name), desc(hospital.name)))
arrange(df, c(state, get(var_name)))
arrange(df, c(state)
arrange(df, state)
library(dplyr)
arrange(df, state)
arrange(df, c(state, get(var_name), desc(hospital.name)))
arrange(df, c(state, get(var_name))
)
arrange(df, c(state
)
)
arrange(df, state)
arrange(df, state, get(var_name)
)
arrange(df, state, get(var_name), desc(hostpital.name))
arrange(df, state, get(var_name), desc(hospital.name))
arrange(df, state, get(var_name), desc(hospital.name))
rm (list = ls())
library(dplyr)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, state, get(var_name), desc(hospital.name))
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
outcome <- "pneumonia"
num <- "worst"
head(rankall("heart attack", 20), 10)
rm (list = ls())
library(dplyr)
rankall <- function(outcome, num = "best") {
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
df <- df[,c(2,7,11,17,23)]
names(df) <- tolower(gsub("[..]+", ".", names(df)))
outcome <- gsub(" ", ".", tolower(outcome))
vars_names <- names(df)[3:5]
var_name <- grep(outcome, vars_names, value = T)
## Check that state and outcome are valid
if (any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
df <- arrange(df, state, get(var_name), hospital.name)
splited = split(df, df$state)
ans = lapply(splited, function(x){
n = ifelse(num == "best", 1, ifelse(num == "worst", nrow(x), num))
x[n,"hospital.name"]
})
data.frame(hospital=unlist(ans), state=names(ans))
}else stop("invalid state")
}
tail(rankall("pneumonia", "worst"), 3)
outcome <- "pneumonia"
num <- "worst"
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
q()
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
# convert column type
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
state %in% df$state && any(grep(outcome, vars_names))
var_name <- grep(outcome, vars_names, value = T)
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
View(df)
names(df)
df <- df[, c(2,7,11,17,23)]
rm(list=ls())
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- dplyr::tbl_df(df)
# convert column type
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
# convert column type
df[,c(11, 17, 23)][df[,c(11, 17, 23)] == "Not Available"] <- NA
df[,c(11, 17, 23)] <- as.numeric(unlist(df[,c(11, 17, 23)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
df <- df[, c(2,7,11,17,23)]
View(df)
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
state %in% df$state && any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
View(df)
df <- df %>% filter(state == state)
df <- filter(df, state == state)
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- filter(df, state == state)
state
df <- df[df$state == state, ])
df <- df[df$state == state, ]
state <- "TX"
outcome <- "heart failure"
num = 4
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$state == state, ]
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, ]
df <- dplyr::tbl_df(df)
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
library(dplyr)
rm(list=ls())
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
state %in% df$state && any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
df[num, "hostpital.name"]
names(df)
df[num, "hospital.name"]
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name))
df[num, "hospital.name"]
View(df)
rm(list=ls())
library(dplyr)
outcome <- "heart failure"
num = 4
state <- "TX"
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
state %in% df$state && any(grep(outcome, vars_names))
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), desc(hospital.name))
df[num, "hospital.name"]
rm(list=ls())
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
if (state %in% df$state && any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
df[num, "hospital.name"]
}
}
rankhospital("TX", "heart failure", 4)
rm(list=ls())
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
if (state %in% df$state && any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
num <- ifelse(num == "best", 1, ifelse(num == "worst", nrow(df)), num)
df[num, "hospital.name"]
}
}
rankhospital("TX", "heart failure", 4)
ifelse(num == "best", 1, ifelse(num == "worst", nrow(df)), num)
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
num <- ifelse(num == "best", 1, ifelse(num == "worst", nrow(df) ,num))
rm(list=ls())
library(dplyr)
state <- "TX"
outcome <- "heart failure"
num = 4
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
df <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
df <- df[df$State == state, c(2,7,11,17,23)]
df <- dplyr::tbl_df(df)
# convert column type
df[,c(3, 4, 5)][df[,c(3, 4, 5)] == "Not Available"] <- NA
df[,c(3, 4, 5)] <- as.numeric(unlist(df[,c(3, 4, 5)]))
names(df) <- tolower(gsub("[..]+", ".", names(df)))
# replace space in <outcome> with dot <.>
outcome <- gsub(" ", ".", tolower(outcome))
## Check that state and outcome are valid
vars_names <- c("hospital.30.day.death.mortality.rates.from.heart.attack",
"hospital.30.day.death.mortality.rates.from.heart.failure",
"hospital.30.day.death.mortality.rates.from.pneumonia")
var_name <- grep(outcome, vars_names, value = T)
if (state %in% df$state && any(grep(outcome, vars_names))){
df <- df[complete.cases(df[, var_name]),]
# sorting
df <- arrange(df, state, get(var_name), hospital.name)
num <- ifelse(num == "best", 1, ifelse(num == "worst", nrow(df) ,num))
df[num, "hospital.name"]
}
}
rankhospital("TX", "heart failure", 4)
num <- 4
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
q()
